@using WebShop.Data
@page "/"

@using WebShop.Data.Models
@rendermode InteractiveServer

@inject WebShopHandler wsh
@inject NavigationManager navigationManager

<PageTitle>Home</PageTitle>
<WebshopHeader ShoppingListLength="@wsh.ShoppingCart.Count()"
               OnNavigationToCashier="GoToCheckout"></WebshopHeader>
@*Connect the buttons in the webshopheader to a navigationmethod that guides to the checkout.*@
<div>
    <nav stype="--bs-breadcrumb-divider:'>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" <a href="#">Home</a></li>
        </ol>
    </nav>
</div>

@if (error)
{
    <div>
        <alert class="alert alert-warning" role="alert"><b>Error:</b>@errorMessage</alert>
    </div>
}

<div class="d-flex flex-wrap justify-content-start">
    @foreach (var product in ProductsList)
    {
        <ProductHomeCard Product="@product"
                         OnShowProductSide="()=>ShowProductSide(product.Id)"
                         OnAddToCart="()=>AddToCart(product.Id)"></ProductHomeCard>
    }
</div>

<WebshopFooter></WebshopFooter>
@code {

    string errorMessage = string.Empty;
    bool error = false;
    public List<Products> ProductsList = new();

    //Navigation
    public void ShowProductSide(int id)
    {
        wsh.GetProductsById(id);
        navigationManager.NavigateTo("/product/" + id);
    }

    public void GoToCheckout() => navigationManager.NavigateTo("/checkout");

    //Bind AddToCartButton to method:
    //public void AddToCart(int id) => wsh.AddToShoppingList(id);

    public void AddToCart(int id)
    {
        wsh.AddToCart(id);
    }

    protected override async Task OnInitializedAsync()
    {
        //await wsh.Seed();
        ProductsList = wsh.GetAllProducts();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            StateHasChanged();
        }
    }
}

