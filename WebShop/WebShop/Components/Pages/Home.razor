@using WebShop.Data
@page "/"

@rendermode InteractiveServer
@inject WebShopHandler wsh
@inject NavigationManager navigationManager

<PageTitle>Home</PageTitle>
<WebshopHeader OnNavigationToCashier="GoToCheckout"></WebshopHeader>
@*Connect the buttons in the webshopheader to a navigationmethod that guides to the checkout.*@
<div>
    <nav stype="--bs-breadcrumb-divider:'>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" <a href="#">Home</a></li>
        </ol>
    </nav>
</div>
@if (error)
{
    <div>
        <alert class="alert alert-warning" role="alert"><b>Error:</b>@errorMessage</alert>
    </div>
}

<div class="d-flex flex-wrap justify-content-start">
    <ProductHomeCard></ProductHomeCard>
    }
</div>

<WebshopFooter></WebshopFooter>
@code {

    string errorMessage = string.Empty;
    bool error = false;

    //Navigation
    public void ShowProductSide(int id)
    {
        navigationManager.NavigateTo("/product/" + id);
    }

    public void GoToCheckout()
    {
        /* (wsh._db.ShoppingList.Count > 0) */
        navigationManager.NavigateTo("/checkout");

        error = true;
        errorMessage = "Shopping list is empty. Please add an object to the list.";

    }

    public async void ShowProducts()
    {
        wsh.Seed();
    }

    //Bind AddToCartButton to method:
    public void AddToCart(int id) => wsh.AddToShoppingList(id);

    protected override async Task OnInitializedAsync()
    {
        await wsh.GetAllProductsAsync();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            wsh.GetAllProductsAsync();
            StateHasChanged();
        }
    }
}

