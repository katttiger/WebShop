@*ProductInfoCard*@

@using WebShop.Common.Classes

@if (Product.Quantity > 0 && Product.IsOnSale == false)
{

    @*TODO:
        Improvement: Center the card*@
    <div class="card d-flex" style="max-width:540px; max-height:auto;">
        <div class="row g-0">
            <div class="col-md-4">
                <img src="@Product.Url" class="img-fluid rounded-start" alt="@Product.Name, @Product.Description">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@Product.Name</h5>
                    <p class="card-text">@Product.Description</p>
                    <p class="card-text text-body-secondary">In store: @Product.Quantity</p>
                    <AddToCartButton OnAddToCart="AddToCart"></AddToCartButton> @Math.Round(Product.Price * Exhangerate) @Currency
                </div>
            </div>
        </div>
    </div>
}

else if (Product.Quantity > 0 && Product.IsOnSale == true)
{
    <div class="card d-flex" style="max-width:540px; max-height:auto;">
        <div class="row g-0">
            <div class="col-md-4">
                <img src="@Product.Url" class="img-fluid rounded-start" alt="@Product.Name, @Product.Description">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@Product.Name <span class="text-danger">SALE!</span></h5>
                    <p class="card-text">@Product.Description</p>
                    <p class="card-text text-body-secondary">In store: @Product.Quantity</p>
                    <AddToCartButton OnAddToCart="AddToCart"></AddToCartButton> <span class="text-danger">@(Math.Round(Product.Price * Exhangerate,2)) @Currency</span>
                </div>
            </div>
        </div>
    </div>
}

else
{
    @*TODO:
        Improvement: Center the card*@
    <div class="card d-flex opacity-50" style="max-width:540px; max-height:auto;">
        <div class="row g-0">
            <div class="col-md-4">
                <img src="@Product.Url" class="img-fluid rounded-start" alt="@Product.Name, @Product.Description">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@Product.Name</h5>
                    <p class="card-text">@Product.Description</p>
                    <p class="card-text text-body-secondary">In store: Sold out</p>
                    <AddToCartButton OnAddToCart="AddToCart"></AddToCartButton> @(Math.Round(Product.Price * Exhangerate,2)) @Currency
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Products Product { get; set; }

    [Parameter]
    public double Exhangerate { get; set; }

    [Parameter]
    public string Currency { get; set; }
    [Parameter]
    public EventCallback OnAddToCart { get; set; }

    public async Task AddToCart()
    {
        await OnAddToCart.InvokeAsync();
    }
}
